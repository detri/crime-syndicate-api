// <auto-generated />
using System;
using CrimeSyndicate.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CrimeSyndicate.Migrations
{
    [DbContext(typeof(CrimeContext))]
    [Migration("20220522024153_CreateSyndicateTableAndRelations")]
    partial class CreateSyndicateTableAndRelations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CrimeSyndicate.Models.Syndicate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("Syndicate");
                });

            modelBuilder.Entity("CrimeSyndicate.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SyndicateId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SyndicateId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CrimeSyndicate.Models.Syndicate", b =>
                {
                    b.HasOne("CrimeSyndicate.Models.User", "Owner")
                        .WithOne("Syndicate")
                        .HasForeignKey("CrimeSyndicate.Models.Syndicate", "OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("CrimeSyndicate.Models.User", b =>
                {
                    b.HasOne("CrimeSyndicate.Models.Syndicate", null)
                        .WithMany("Members")
                        .HasForeignKey("SyndicateId");
                });

            modelBuilder.Entity("CrimeSyndicate.Models.Syndicate", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("CrimeSyndicate.Models.User", b =>
                {
                    b.Navigation("Syndicate");
                });
#pragma warning restore 612, 618
        }
    }
}
